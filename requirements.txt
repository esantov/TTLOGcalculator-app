Real-Time Time-to-Threshold Calculator

This Streamlit application allows users to enter time and sensor signal data in real time and estimates the time required to reach a user-defined threshold using a Five-Parameter Logistic (5PL) model.

Features

Real-time data entry: Input time and signal points as they become available.

5PL Curve Fitting: Automatically fits a 5PL model once at least 5 data points are collected.

Threshold Prediction: Computes and displays the estimated time-to-threshold (Tt) based on the fitted curve.

Interactive Plot: Shows raw data, fitted curve, threshold line, and estimated Tt on a matplotlib plot.

Data Export: Download the collected dataset as a CSV file.

Requirements

Python 3.7+

Streamlit

pandas

numpy

scipy

matplotlib

Install dependencies with:

pip install streamlit pandas numpy scipy matplotlib

Usage

Run the app locally

streamlit run real_time_ttt_app.py

Open the URL displayed (usually http://localhost:8501) in your web browser.

Enter time (e.g., minutes or hours) and corresponding sensor signal values.

Click "Add Data Point" after each entryâ€”your dataset table will update.

Once 5 or more points are collected, the app:

Fits a 5PL curve to the data.

Calculates the time at which the signal will reach your specified threshold.

Plots data points (black circles), the 5PL fit (blue solid line), the threshold (green dashed line), and the predicted Tt (red dashed vertical line).

Download your cumulative data as a CSV via the "Download Data as CSV" button.

Configuration

Threshold Value: Set your target signal threshold via the threshold input box.

Plot Styling: Modify figure size, labels, and colors directly in the script if desired.

Deployment

Google App Engine

Create an app.yaml in the project root:

runtime: python39
entrypoint: streamlit run real_time_ttt_app.py --server.port=$PORT
env_variables:
  STREAMLIT_SERVER_HEADLESS: "true"
  STREAMLIT_SERVER_ENABLECORS: "false"
  STREAMLIT_SERVER_PORT: $PORT

Ensure requirements.txt lists all dependencies.

Initialize and deploy with the Google Cloud SDK:

gcloud init
gcloud auth login
gcloud config set project YOUR_PROJECT_ID
gcloud app deploy

Visit https://YOUR_PROJECT_ID.appspot.com to access your live app.

License

Distributed under the MIT License. See LICENSE for more information.

